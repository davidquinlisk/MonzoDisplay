using namespace System.Net

# Input bindings are passed in via param block.
param($Request, $TriggerMetadata)

# Retrieve Monzo API Bearer Token from query parameters.  (Token is defined by the end user in the LaMetric Time App)
$auth = $Request.Query.auth

# Access Monzo API to retrieve retrieve Current Balance of the Account.
# Monzo API | Define HTTP API Header
$Header = @{"authorization" = "Bearer $auth"}

# Monzo API | Retrieve account ID from the first account returned and use to retrieve balance of that account..
Try{
    $jsonOutput = Invoke-RestMethod -Uri https://api.monzo.com/accounts -Headers $Header
    $account_id = $jsonOutput.accounts[0].id
    $jsonOutput = Invoke-RestMethod -Uri https://api.monzo.com/balance?account_id=$account_id -Headers $Header
    $balance = "Â£" + $jsonOutput.balance/100
    $appIcon = 15490
} Catch {
    # Write to the Azure Functions log stream if error occurs.
    Write-Host "Message: [$($_.Exception.Message)"] -ForegroundColor Red
    $balance = $_.Exception.Response.StatusCode
    $appIcon = 555
}

# Format JSON in format suitable for LaMetric Time.
$JSONBody = new-object psobject
$frames = @(
    @{text = $balance; icon = $appIcon; index = 0;}
)
$JSONBody | Add-Member -MemberType NoteProperty -Name 'frames' -Value $frames -Force
$body = $JSONBody | ConvertTo-Json -Depth 3

# Associate values to output bindings by calling 'Push-OutputBinding'.
Push-OutputBinding -Name Response -Value ([HttpResponseContext]@{
    StatusCode = [HttpStatusCode]::OK
    Body = $body
})
